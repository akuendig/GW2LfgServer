// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.1
// source: service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RaidId int32

const (
	RaidId_RAID_UNKNOWN RaidId = 0
	RaidId_RAID_WING_1  RaidId = 1
	RaidId_RAID_WING_2  RaidId = 2
	RaidId_RAID_WING_3  RaidId = 3
	RaidId_RAID_WING_4  RaidId = 4
	RaidId_RAID_WING_5  RaidId = 5
	RaidId_RAID_WING_6  RaidId = 6
	RaidId_RAID_WING_7  RaidId = 7
)

// Enum value maps for RaidId.
var (
	RaidId_name = map[int32]string{
		0: "RAID_UNKNOWN",
		1: "RAID_WING_1",
		2: "RAID_WING_2",
		3: "RAID_WING_3",
		4: "RAID_WING_4",
		5: "RAID_WING_5",
		6: "RAID_WING_6",
		7: "RAID_WING_7",
	}
	RaidId_value = map[string]int32{
		"RAID_UNKNOWN": 0,
		"RAID_WING_1":  1,
		"RAID_WING_2":  2,
		"RAID_WING_3":  3,
		"RAID_WING_4":  4,
		"RAID_WING_5":  5,
		"RAID_WING_6":  6,
		"RAID_WING_7":  7,
	}
)

func (x RaidId) Enum() *RaidId {
	p := new(RaidId)
	*p = x
	return p
}

func (x RaidId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RaidId) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (RaidId) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x RaidId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RaidId.Descriptor instead.
func (RaidId) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

type KillProofId int32

const (
	KillProofId_KP_UNKNOWN KillProofId = 0
	KillProofId_KP_LI      KillProofId = 1
	KillProofId_KP_BSKP    KillProofId = 2
	KillProofId_KP_UFE     KillProofId = 3
)

// Enum value maps for KillProofId.
var (
	KillProofId_name = map[int32]string{
		0: "KP_UNKNOWN",
		1: "KP_LI",
		2: "KP_BSKP",
		3: "KP_UFE",
	}
	KillProofId_value = map[string]int32{
		"KP_UNKNOWN": 0,
		"KP_LI":      1,
		"KP_BSKP":    2,
		"KP_UFE":     3,
	}
)

func (x KillProofId) Enum() *KillProofId {
	p := new(KillProofId)
	*p = x
	return p
}

func (x KillProofId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KillProofId) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[1].Descriptor()
}

func (KillProofId) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[1]
}

func (x KillProofId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KillProofId.Descriptor instead.
func (KillProofId) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string      `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	KillProofId      KillProofId `protobuf:"varint,2,opt,name=kill_proof_id,json=killProofId,proto3,enum=gw2lfg.KillProofId" json:"kill_proof_id,omitempty"`
	KillProofMinimum uint32      `protobuf:"varint,3,opt,name=kill_proof_minimum,json=killProofMinimum,proto3" json:"kill_proof_minimum,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateGroupRequest) GetKillProofId() KillProofId {
	if x != nil {
		return x.KillProofId
	}
	return KillProofId_KP_UNKNOWN
}

func (x *CreateGroupRequest) GetKillProofMinimum() uint32 {
	if x != nil {
		return x.KillProofMinimum
	}
	return 0
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId        string      `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Title            string      `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	KillProofId      KillProofId `protobuf:"varint,4,opt,name=kill_proof_id,json=killProofId,proto3,enum=gw2lfg.KillProofId" json:"kill_proof_id,omitempty"`
	KillProofMinimum uint32      `protobuf:"varint,5,opt,name=kill_proof_minimum,json=killProofMinimum,proto3" json:"kill_proof_minimum,omitempty"`
	CreatedAtSec     int64       `protobuf:"varint,6,opt,name=created_at_sec,json=createdAtSec,proto3" json:"created_at_sec,omitempty"`
	UpdatedAtSec     int64       `protobuf:"varint,7,opt,name=updated_at_sec,json=updatedAtSec,proto3" json:"updated_at_sec,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Group) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Group) GetKillProofId() KillProofId {
	if x != nil {
		return x.KillProofId
	}
	return KillProofId_KP_UNKNOWN
}

func (x *Group) GetKillProofMinimum() uint32 {
	if x != nil {
		return x.KillProofMinimum
	}
	return 0
}

func (x *Group) GetCreatedAtSec() int64 {
	if x != nil {
		return x.CreatedAtSec
	}
	return 0
}

func (x *Group) GetUpdatedAtSec() int64 {
	if x != nil {
		return x.UpdatedAtSec
	}
	return 0
}

type UpdateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateGroupRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type UpdateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *UpdateGroupResponse) Reset() {
	*x = UpdateGroupResponse{}
	mi := &file_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupResponse) ProtoMessage() {}

func (x *UpdateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateGroupResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	mi := &file_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DeleteGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroupResponse) Reset() {
	*x = DeleteGroupResponse{}
	mi := &file_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupResponse) ProtoMessage() {}

func (x *DeleteGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteGroupResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

type SubscribeGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeGroupsRequest) Reset() {
	*x = SubscribeGroupsRequest{}
	mi := &file_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeGroupsRequest) ProtoMessage() {}

func (x *SubscribeGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeGroupsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeGroupsRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

type GroupsUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//
	//	*GroupsUpdate_NewGroup
	//	*GroupsUpdate_UpdatedGroup
	//	*GroupsUpdate_RemovedGroupId
	Update isGroupsUpdate_Update `protobuf_oneof:"update"`
}

func (x *GroupsUpdate) Reset() {
	*x = GroupsUpdate{}
	mi := &file_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsUpdate) ProtoMessage() {}

func (x *GroupsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsUpdate.ProtoReflect.Descriptor instead.
func (*GroupsUpdate) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (m *GroupsUpdate) GetUpdate() isGroupsUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *GroupsUpdate) GetNewGroup() *Group {
	if x, ok := x.GetUpdate().(*GroupsUpdate_NewGroup); ok {
		return x.NewGroup
	}
	return nil
}

func (x *GroupsUpdate) GetUpdatedGroup() *Group {
	if x, ok := x.GetUpdate().(*GroupsUpdate_UpdatedGroup); ok {
		return x.UpdatedGroup
	}
	return nil
}

func (x *GroupsUpdate) GetRemovedGroupId() string {
	if x, ok := x.GetUpdate().(*GroupsUpdate_RemovedGroupId); ok {
		return x.RemovedGroupId
	}
	return ""
}

type isGroupsUpdate_Update interface {
	isGroupsUpdate_Update()
}

type GroupsUpdate_NewGroup struct {
	NewGroup *Group `protobuf:"bytes,1,opt,name=new_group,json=newGroup,proto3,oneof"`
}

type GroupsUpdate_UpdatedGroup struct {
	UpdatedGroup *Group `protobuf:"bytes,2,opt,name=updated_group,json=updatedGroup,proto3,oneof"`
}

type GroupsUpdate_RemovedGroupId struct {
	RemovedGroupId string `protobuf:"bytes,3,opt,name=removed_group_id,json=removedGroupId,proto3,oneof"`
}

func (*GroupsUpdate_NewGroup) isGroupsUpdate_Update() {}

func (*GroupsUpdate_UpdatedGroup) isGroupsUpdate_Update() {}

func (*GroupsUpdate_RemovedGroupId) isGroupsUpdate_Update() {}

type ListGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGroupsRequest) Reset() {
	*x = ListGroupsRequest{}
	mi := &file_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsRequest) ProtoMessage() {}

func (x *ListGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9}
}

type ListGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ListGroupsResponse) Reset() {
	*x = ListGroupsResponse{}
	mi := &file_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsResponse) ProtoMessage() {}

func (x *ListGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListGroupsResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListGroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroupApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountName  string     `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	GroupId      string     `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	KillProof    *KillProof `protobuf:"bytes,4,opt,name=kill_proof,json=killProof,proto3" json:"kill_proof,omitempty"`
	CreatedAtSec int64      `protobuf:"varint,5,opt,name=created_at_sec,json=createdAtSec,proto3" json:"created_at_sec,omitempty"`
	UpdatedAtSec int64      `protobuf:"varint,6,opt,name=updated_at_sec,json=updatedAtSec,proto3" json:"updated_at_sec,omitempty"`
}

func (x *GroupApplication) Reset() {
	*x = GroupApplication{}
	mi := &file_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplication) ProtoMessage() {}

func (x *GroupApplication) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplication.ProtoReflect.Descriptor instead.
func (*GroupApplication) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{11}
}

func (x *GroupApplication) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupApplication) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GroupApplication) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupApplication) GetKillProof() *KillProof {
	if x != nil {
		return x.KillProof
	}
	return nil
}

func (x *GroupApplication) GetCreatedAtSec() int64 {
	if x != nil {
		return x.CreatedAtSec
	}
	return 0
}

func (x *GroupApplication) GetUpdatedAtSec() int64 {
	if x != nil {
		return x.UpdatedAtSec
	}
	return 0
}

type KillProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Li   int32 `protobuf:"varint,1,opt,name=li,proto3" json:"li,omitempty"`
	Bskp int32 `protobuf:"varint,2,opt,name=bskp,proto3" json:"bskp,omitempty"`
	Ufe  int32 `protobuf:"varint,3,opt,name=ufe,proto3" json:"ufe,omitempty"`
	W1   int32 `protobuf:"varint,4,opt,name=w1,proto3" json:"w1,omitempty"`
	W2   int32 `protobuf:"varint,5,opt,name=w2,proto3" json:"w2,omitempty"`
	W3   int32 `protobuf:"varint,6,opt,name=w3,proto3" json:"w3,omitempty"`
	W4   int32 `protobuf:"varint,7,opt,name=w4,proto3" json:"w4,omitempty"`
	W5   int32 `protobuf:"varint,8,opt,name=w5,proto3" json:"w5,omitempty"`
	W6   int32 `protobuf:"varint,9,opt,name=w6,proto3" json:"w6,omitempty"`
	W7   int32 `protobuf:"varint,10,opt,name=w7,proto3" json:"w7,omitempty"`
	W8   int32 `protobuf:"varint,11,opt,name=w8,proto3" json:"w8,omitempty"`
}

func (x *KillProof) Reset() {
	*x = KillProof{}
	mi := &file_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillProof) ProtoMessage() {}

func (x *KillProof) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillProof.ProtoReflect.Descriptor instead.
func (*KillProof) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{12}
}

func (x *KillProof) GetLi() int32 {
	if x != nil {
		return x.Li
	}
	return 0
}

func (x *KillProof) GetBskp() int32 {
	if x != nil {
		return x.Bskp
	}
	return 0
}

func (x *KillProof) GetUfe() int32 {
	if x != nil {
		return x.Ufe
	}
	return 0
}

func (x *KillProof) GetW1() int32 {
	if x != nil {
		return x.W1
	}
	return 0
}

func (x *KillProof) GetW2() int32 {
	if x != nil {
		return x.W2
	}
	return 0
}

func (x *KillProof) GetW3() int32 {
	if x != nil {
		return x.W3
	}
	return 0
}

func (x *KillProof) GetW4() int32 {
	if x != nil {
		return x.W4
	}
	return 0
}

func (x *KillProof) GetW5() int32 {
	if x != nil {
		return x.W5
	}
	return 0
}

func (x *KillProof) GetW6() int32 {
	if x != nil {
		return x.W6
	}
	return 0
}

func (x *KillProof) GetW7() int32 {
	if x != nil {
		return x.W7
	}
	return 0
}

func (x *KillProof) GetW8() int32 {
	if x != nil {
		return x.W8
	}
	return 0
}

type CreateGroupApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CreateGroupApplicationRequest) Reset() {
	*x = CreateGroupApplicationRequest{}
	mi := &file_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupApplicationRequest) ProtoMessage() {}

func (x *CreateGroupApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupApplicationRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupApplicationRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateGroupApplicationRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type CreateGroupApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application *GroupApplication `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
}

func (x *CreateGroupApplicationResponse) Reset() {
	*x = CreateGroupApplicationResponse{}
	mi := &file_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupApplicationResponse) ProtoMessage() {}

func (x *CreateGroupApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupApplicationResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupApplicationResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateGroupApplicationResponse) GetApplication() *GroupApplication {
	if x != nil {
		return x.Application
	}
	return nil
}

type UpdateGroupApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGroupApplicationRequest) Reset() {
	*x = UpdateGroupApplicationRequest{}
	mi := &file_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupApplicationRequest) ProtoMessage() {}

func (x *UpdateGroupApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupApplicationRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupApplicationRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{15}
}

type UpdateGroupApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGroupApplicationResponse) Reset() {
	*x = UpdateGroupApplicationResponse{}
	mi := &file_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupApplicationResponse) ProtoMessage() {}

func (x *UpdateGroupApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupApplicationResponse.ProtoReflect.Descriptor instead.
func (*UpdateGroupApplicationResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{16}
}

type ListGroupApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*ListGroupApplicationsRequest_GroupId
	//	*ListGroupApplicationsRequest_AccountName
	Id isListGroupApplicationsRequest_Id `protobuf_oneof:"id"`
}

func (x *ListGroupApplicationsRequest) Reset() {
	*x = ListGroupApplicationsRequest{}
	mi := &file_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupApplicationsRequest) ProtoMessage() {}

func (x *ListGroupApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupApplicationsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{17}
}

func (m *ListGroupApplicationsRequest) GetId() isListGroupApplicationsRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *ListGroupApplicationsRequest) GetGroupId() string {
	if x, ok := x.GetId().(*ListGroupApplicationsRequest_GroupId); ok {
		return x.GroupId
	}
	return ""
}

func (x *ListGroupApplicationsRequest) GetAccountName() string {
	if x, ok := x.GetId().(*ListGroupApplicationsRequest_AccountName); ok {
		return x.AccountName
	}
	return ""
}

type isListGroupApplicationsRequest_Id interface {
	isListGroupApplicationsRequest_Id()
}

type ListGroupApplicationsRequest_GroupId struct {
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3,oneof"`
}

type ListGroupApplicationsRequest_AccountName struct {
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3,oneof"`
}

func (*ListGroupApplicationsRequest_GroupId) isListGroupApplicationsRequest_Id() {}

func (*ListGroupApplicationsRequest_AccountName) isListGroupApplicationsRequest_Id() {}

type ListGroupApplicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applications []*GroupApplication `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
}

func (x *ListGroupApplicationsResponse) Reset() {
	*x = ListGroupApplicationsResponse{}
	mi := &file_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupApplicationsResponse) ProtoMessage() {}

func (x *ListGroupApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupApplicationsResponse.ProtoReflect.Descriptor instead.
func (*ListGroupApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListGroupApplicationsResponse) GetApplications() []*GroupApplication {
	if x != nil {
		return x.Applications
	}
	return nil
}

type DeleteGroupApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId       string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ApplicationId string `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *DeleteGroupApplicationRequest) Reset() {
	*x = DeleteGroupApplicationRequest{}
	mi := &file_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupApplicationRequest) ProtoMessage() {}

func (x *DeleteGroupApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupApplicationRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteGroupApplicationRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DeleteGroupApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type DeleteGroupApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroupApplicationResponse) Reset() {
	*x = DeleteGroupApplicationResponse{}
	mi := &file_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupApplicationResponse) ProtoMessage() {}

func (x *DeleteGroupApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeleteGroupApplicationResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{20}
}

// TODO: We need updates similar to GroupsUpdate
type SubscribeGroupApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *SubscribeGroupApplicationsRequest) Reset() {
	*x = SubscribeGroupApplicationsRequest{}
	mi := &file_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeGroupApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeGroupApplicationsRequest) ProtoMessage() {}

func (x *SubscribeGroupApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeGroupApplicationsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeGroupApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{21}
}

func (x *SubscribeGroupApplicationsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GroupApplicationUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//
	//	*GroupApplicationUpdate_NewApplication
	//	*GroupApplicationUpdate_UpdatedApplication
	//	*GroupApplicationUpdate_RemovedApplicationId
	Update isGroupApplicationUpdate_Update `protobuf_oneof:"update"`
}

func (x *GroupApplicationUpdate) Reset() {
	*x = GroupApplicationUpdate{}
	mi := &file_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupApplicationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplicationUpdate) ProtoMessage() {}

func (x *GroupApplicationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplicationUpdate.ProtoReflect.Descriptor instead.
func (*GroupApplicationUpdate) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{22}
}

func (m *GroupApplicationUpdate) GetUpdate() isGroupApplicationUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *GroupApplicationUpdate) GetNewApplication() *GroupApplication {
	if x, ok := x.GetUpdate().(*GroupApplicationUpdate_NewApplication); ok {
		return x.NewApplication
	}
	return nil
}

func (x *GroupApplicationUpdate) GetUpdatedApplication() *GroupApplication {
	if x, ok := x.GetUpdate().(*GroupApplicationUpdate_UpdatedApplication); ok {
		return x.UpdatedApplication
	}
	return nil
}

func (x *GroupApplicationUpdate) GetRemovedApplicationId() string {
	if x, ok := x.GetUpdate().(*GroupApplicationUpdate_RemovedApplicationId); ok {
		return x.RemovedApplicationId
	}
	return ""
}

type isGroupApplicationUpdate_Update interface {
	isGroupApplicationUpdate_Update()
}

type GroupApplicationUpdate_NewApplication struct {
	NewApplication *GroupApplication `protobuf:"bytes,1,opt,name=new_application,json=newApplication,proto3,oneof"`
}

type GroupApplicationUpdate_UpdatedApplication struct {
	UpdatedApplication *GroupApplication `protobuf:"bytes,2,opt,name=updated_application,json=updatedApplication,proto3,oneof"`
}

type GroupApplicationUpdate_RemovedApplicationId struct {
	RemovedApplicationId string `protobuf:"bytes,3,opt,name=removed_application_id,json=removedApplicationId,proto3,oneof"`
}

func (*GroupApplicationUpdate_NewApplication) isGroupApplicationUpdate_Update() {}

func (*GroupApplicationUpdate_UpdatedApplication) isGroupApplicationUpdate_Update() {}

func (*GroupApplicationUpdate_RemovedApplicationId) isGroupApplicationUpdate_Update() {}

type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{23}
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{24}
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x77,
	0x32, 0x6c, 0x66, 0x67, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x64,
	0x52, 0x0b, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6b, 0x69, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x22, 0x3a, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xff, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x49, 0x64, 0x52, 0x0b, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6b, 0x69, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x53, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x65, 0x63, 0x22, 0x39, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x3a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x77, 0x32,
	0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x34, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66,
	0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x13, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66,
	0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0xde, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e,
	0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x65, 0x63,
	0x22, 0xc1, 0x01, 0x0a, 0x09, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e,
	0x0a, 0x02, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6c, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x73, 0x6b, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x73,
	0x6b, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x66, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x75, 0x66, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x35, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x36, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x36, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x37, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x37, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x38, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x77, 0x38, 0x22, 0x3a, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x5c, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1f,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x20, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x66, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x61, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a,
	0x21, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xec, 0x01,
	0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6e,
	0x65, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a,
	0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x77, 0x32,
	0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x16, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x91, 0x01, 0x0a, 0x06, 0x52, 0x61, 0x69, 0x64, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x57, 0x49, 0x4e, 0x47, 0x5f,
	0x31, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x57, 0x49, 0x4e, 0x47,
	0x5f, 0x32, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x57, 0x49, 0x4e,
	0x47, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x57, 0x49,
	0x4e, 0x47, 0x5f, 0x34, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x57,
	0x49, 0x4e, 0x47, 0x5f, 0x35, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x49, 0x44, 0x5f,
	0x57, 0x49, 0x4e, 0x47, 0x5f, 0x36, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x49, 0x44,
	0x5f, 0x57, 0x49, 0x4e, 0x47, 0x5f, 0x37, 0x10, 0x07, 0x2a, 0x41, 0x0a, 0x0b, 0x4b, 0x69, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x50, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x50, 0x5f, 0x4c,
	0x49, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x50, 0x5f, 0x42, 0x53, 0x4b, 0x50, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x50, 0x5f, 0x55, 0x46, 0x45, 0x10, 0x03, 0x32, 0xd8, 0x07, 0x0a,
	0x0a, 0x4c, 0x66, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x67, 0x77, 0x32,
	0x6c, 0x66, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x19, 0x2e,
	0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66,
	0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x69, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x77, 0x32, 0x6c,
	0x66, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x67,
	0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67,
	0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x12, 0x18, 0x2e, 0x67, 0x77, 0x32, 0x6c, 0x66, 0x67, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x77, 0x32,
	0x6c, 0x66, 0x67, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0xaa,
	0x02, 0x0c, 0x47, 0x77, 0x32, 0x4c, 0x66, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_service_proto_goTypes = []any{
	(RaidId)(0),                               // 0: gw2lfg.RaidId
	(KillProofId)(0),                          // 1: gw2lfg.KillProofId
	(*CreateGroupRequest)(nil),                // 2: gw2lfg.CreateGroupRequest
	(*CreateGroupResponse)(nil),               // 3: gw2lfg.CreateGroupResponse
	(*Group)(nil),                             // 4: gw2lfg.Group
	(*UpdateGroupRequest)(nil),                // 5: gw2lfg.UpdateGroupRequest
	(*UpdateGroupResponse)(nil),               // 6: gw2lfg.UpdateGroupResponse
	(*DeleteGroupRequest)(nil),                // 7: gw2lfg.DeleteGroupRequest
	(*DeleteGroupResponse)(nil),               // 8: gw2lfg.DeleteGroupResponse
	(*SubscribeGroupsRequest)(nil),            // 9: gw2lfg.SubscribeGroupsRequest
	(*GroupsUpdate)(nil),                      // 10: gw2lfg.GroupsUpdate
	(*ListGroupsRequest)(nil),                 // 11: gw2lfg.ListGroupsRequest
	(*ListGroupsResponse)(nil),                // 12: gw2lfg.ListGroupsResponse
	(*GroupApplication)(nil),                  // 13: gw2lfg.GroupApplication
	(*KillProof)(nil),                         // 14: gw2lfg.KillProof
	(*CreateGroupApplicationRequest)(nil),     // 15: gw2lfg.CreateGroupApplicationRequest
	(*CreateGroupApplicationResponse)(nil),    // 16: gw2lfg.CreateGroupApplicationResponse
	(*UpdateGroupApplicationRequest)(nil),     // 17: gw2lfg.UpdateGroupApplicationRequest
	(*UpdateGroupApplicationResponse)(nil),    // 18: gw2lfg.UpdateGroupApplicationResponse
	(*ListGroupApplicationsRequest)(nil),      // 19: gw2lfg.ListGroupApplicationsRequest
	(*ListGroupApplicationsResponse)(nil),     // 20: gw2lfg.ListGroupApplicationsResponse
	(*DeleteGroupApplicationRequest)(nil),     // 21: gw2lfg.DeleteGroupApplicationRequest
	(*DeleteGroupApplicationResponse)(nil),    // 22: gw2lfg.DeleteGroupApplicationResponse
	(*SubscribeGroupApplicationsRequest)(nil), // 23: gw2lfg.SubscribeGroupApplicationsRequest
	(*GroupApplicationUpdate)(nil),            // 24: gw2lfg.GroupApplicationUpdate
	(*HeartbeatRequest)(nil),                  // 25: gw2lfg.HeartbeatRequest
	(*HeartbeatResponse)(nil),                 // 26: gw2lfg.HeartbeatResponse
}
var file_service_proto_depIdxs = []int32{
	1,  // 0: gw2lfg.CreateGroupRequest.kill_proof_id:type_name -> gw2lfg.KillProofId
	4,  // 1: gw2lfg.CreateGroupResponse.group:type_name -> gw2lfg.Group
	1,  // 2: gw2lfg.Group.kill_proof_id:type_name -> gw2lfg.KillProofId
	4,  // 3: gw2lfg.UpdateGroupRequest.group:type_name -> gw2lfg.Group
	4,  // 4: gw2lfg.UpdateGroupResponse.group:type_name -> gw2lfg.Group
	4,  // 5: gw2lfg.GroupsUpdate.new_group:type_name -> gw2lfg.Group
	4,  // 6: gw2lfg.GroupsUpdate.updated_group:type_name -> gw2lfg.Group
	4,  // 7: gw2lfg.ListGroupsResponse.groups:type_name -> gw2lfg.Group
	14, // 8: gw2lfg.GroupApplication.kill_proof:type_name -> gw2lfg.KillProof
	13, // 9: gw2lfg.CreateGroupApplicationResponse.application:type_name -> gw2lfg.GroupApplication
	13, // 10: gw2lfg.ListGroupApplicationsResponse.applications:type_name -> gw2lfg.GroupApplication
	13, // 11: gw2lfg.GroupApplicationUpdate.new_application:type_name -> gw2lfg.GroupApplication
	13, // 12: gw2lfg.GroupApplicationUpdate.updated_application:type_name -> gw2lfg.GroupApplication
	2,  // 13: gw2lfg.LfgService.CreateGroup:input_type -> gw2lfg.CreateGroupRequest
	5,  // 14: gw2lfg.LfgService.UpdateGroup:input_type -> gw2lfg.UpdateGroupRequest
	11, // 15: gw2lfg.LfgService.ListGroups:input_type -> gw2lfg.ListGroupsRequest
	7,  // 16: gw2lfg.LfgService.DeleteGroup:input_type -> gw2lfg.DeleteGroupRequest
	9,  // 17: gw2lfg.LfgService.SubscribeGroups:input_type -> gw2lfg.SubscribeGroupsRequest
	15, // 18: gw2lfg.LfgService.CreateGroupApplication:input_type -> gw2lfg.CreateGroupApplicationRequest
	17, // 19: gw2lfg.LfgService.UpdateGroupApplication:input_type -> gw2lfg.UpdateGroupApplicationRequest
	19, // 20: gw2lfg.LfgService.ListGroupApplications:input_type -> gw2lfg.ListGroupApplicationsRequest
	21, // 21: gw2lfg.LfgService.DeleteGroupApplication:input_type -> gw2lfg.DeleteGroupApplicationRequest
	23, // 22: gw2lfg.LfgService.SubscribeGroupApplications:input_type -> gw2lfg.SubscribeGroupApplicationsRequest
	25, // 23: gw2lfg.LfgService.Heartbeat:input_type -> gw2lfg.HeartbeatRequest
	3,  // 24: gw2lfg.LfgService.CreateGroup:output_type -> gw2lfg.CreateGroupResponse
	6,  // 25: gw2lfg.LfgService.UpdateGroup:output_type -> gw2lfg.UpdateGroupResponse
	12, // 26: gw2lfg.LfgService.ListGroups:output_type -> gw2lfg.ListGroupsResponse
	8,  // 27: gw2lfg.LfgService.DeleteGroup:output_type -> gw2lfg.DeleteGroupResponse
	10, // 28: gw2lfg.LfgService.SubscribeGroups:output_type -> gw2lfg.GroupsUpdate
	16, // 29: gw2lfg.LfgService.CreateGroupApplication:output_type -> gw2lfg.CreateGroupApplicationResponse
	18, // 30: gw2lfg.LfgService.UpdateGroupApplication:output_type -> gw2lfg.UpdateGroupApplicationResponse
	20, // 31: gw2lfg.LfgService.ListGroupApplications:output_type -> gw2lfg.ListGroupApplicationsResponse
	22, // 32: gw2lfg.LfgService.DeleteGroupApplication:output_type -> gw2lfg.DeleteGroupApplicationResponse
	24, // 33: gw2lfg.LfgService.SubscribeGroupApplications:output_type -> gw2lfg.GroupApplicationUpdate
	26, // 34: gw2lfg.LfgService.Heartbeat:output_type -> gw2lfg.HeartbeatResponse
	24, // [24:35] is the sub-list for method output_type
	13, // [13:24] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_service_proto_msgTypes[8].OneofWrappers = []any{
		(*GroupsUpdate_NewGroup)(nil),
		(*GroupsUpdate_UpdatedGroup)(nil),
		(*GroupsUpdate_RemovedGroupId)(nil),
	}
	file_service_proto_msgTypes[17].OneofWrappers = []any{
		(*ListGroupApplicationsRequest_GroupId)(nil),
		(*ListGroupApplicationsRequest_AccountName)(nil),
	}
	file_service_proto_msgTypes[22].OneofWrappers = []any{
		(*GroupApplicationUpdate_NewApplication)(nil),
		(*GroupApplicationUpdate_UpdatedApplication)(nil),
		(*GroupApplicationUpdate_RemovedApplicationId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
